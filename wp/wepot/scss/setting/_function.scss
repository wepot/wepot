// ============= 使用ファイル =============
@use "sass:math";

// =============数値から単位を取り除く=============
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return math.div($number , ($number * 0 + 1));
  }

  @return $number;
}


// =============フォントサイズpx→rem計算=============
// 第1引数：指定したいピクセル値
// 第2引数：基準となるルートのフォントサイズ値
// 
// (例)font-size: rem(36px);／font-size: rem(36px, 12px);
// ===================================================
@function rem($px, $base: 16px) {
  $value: $px;

  // 単位がpx以外の場合はそのまま返す
  @if (unit($px) != 'px') {
    @return $value;
  }

  $value: math.div(strip-unit($px) , strip-unit($base)) * 1rem;

  @return $value;
}


// =============文字列からワードを検索して置き換える=============
// 第1引数：検索対象を指定
// 第2引数：置き換えしたいワードを指定
// 第3引数：置き換え後のワードを指定
// ※font-face使用時は必ず設定
// ==============================================================
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}


// =============px→vw変換=============
// 第1引数：指定したいピクセル値を入力
// 第2引数：基準となる画面幅（デザインカンプの横幅）を指定
// 
// (例)width: vw(40px);／width: vw(40px, 768px);／width: vw(50%);
// ====================================
@function vw($px, $base: 375px) {
  $value: $px;

  // 単位がpx以外の場合は警告を出してそのまま返す
  @if (unit($px) != 'px') {
    @warn 'vw()の引数にpx以外の値を指定しても計算できません';
    @return $value;
  }

  $value: math.div(strip-unit($px) , strip-unit($base)) * 100vw;

  @return $value;
}